name: Create Azure AI Foundry Resources

on:
  workflow_dispatch:
    inputs:
      aiFoundryResourceName:
        description: 'The name of the AI Foundry resource'
        required: true
        type: string        
        default: 'foundrycontoso77'
      privateFoundry:
        description: 'Deploy the AI Foundry in private mode'
        required: true
        type: boolean
        default: false        
      deployProject:
        description: 'If a default project needs to be deployed with the AI Foundry'
        required: true
        type: boolean
        default: true
      projectName:
        description: 'The name of the project'
        required: true
        type: string
        default: 'contoso'   
      projectDescription: 
        description: 'The description of the project'
        required: true
        type: string
        default: 'Contoso default project'          
      projectDisplayName: 
        description: 'The display name of the project'
        required: true
        type: string
        default: 'Contoso'             

jobs:
  create-azure-ai-foundry:
    env:
      REGION: ${{ secrets.LOCATION }} # You can change this to reflect the region where you deploy your Accelerator
      AZURE_CORE_OUTPUT: "none"

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - uses: cschleiden/replace-tokens@v1
        with:
            tokenPrefix: '__'
            tokenSuffix: '__'            
            files: '["infra/terraform/versions.tf"]'
        env:
            resourceGroupName: ${{ secrets.TERRAFORM_STORAGE_RESOURCE_GROUP }}            
            storageAccountName: ${{ secrets.TERRAFORM_STORAGE_NAME }}            
            tenantID: ${{ secrets.AZURE_TENANT_ID }}
            subscriptionID: ${{ secrets.AZURE_SUBSCRIPTION }}


      - name: Azure Login
        uses: Azure/login@v2
        with:
          creds: ${{ secrets.SP_FOUNDRY }}

      - uses: cschleiden/replace-tokens@v1
        with:
            tokenPrefix: '__'
            tokenSuffix: '__'            
            files: '["infra/terraform/variables.tf"]'
        env:
            subscription_id_resources: ${{ secrets.AZURE_SUBSCRIPTION }}
            subscription_id_private_dns_zones: ${{ secrets.AZURE_SUBSCRIPTION }}
            resource_group_name_dns: ${{ secrets.PRIVATE_DNS_RESOURCE_GROUP_NAME }}
            vnet_resource_group_name: ${{ secrets.VNET_RESOURCE_GROUP_NAME }}
            private_dns_cognitiveservices_name: ${{ secrets.COGNITIVE_SERVICES_PRIVATE_DNS_ZONE_RESOURCE_NAME }}
            private_dns_services_ai_name: ${{ secrets.AI_SERVICES_PRIVATE_DNS_ZONE_RESOURCE_NAME }}
            private_dns_openai_name: ${{ secrets.OPEN_AI_PRIVATE_DNS_ZONE_RESOURCE_NAME }}
            location: ${{ secrets.LOCATION }}
            existing_vnet_name: ${{ secrets.VNET_RESOURCE_NAME }}
            existing_subnet_agent_name: ${{ secrets.SUBNET_AGENT_RESOURCE_NAME }}
            existing_subnet_private_endpoint_name: ${{ secrets.SUBNET_PRIVATE_ENDPOINT_RESOURCE_NAME }}
            resource_group_name_resources: ${{ secrets.RESOURCE_GROUP_NAME }}
            existing_storage_account_name: ${{ secrets.STORAGE_ACCOUNT_RESOURCE_NAME }}
            existing_cosmosdb_account_name: ${{ secrets.AZURE_COSMOS_DB_ACCOUNT_RESOURCE_NAME }}
            existing_aisearch_account_name: ${{ secrets.AI_SEARCH_RESOURCE_NAME }}
            ai_foundry_resource_name: ${{ inputs.aiFoundryResourceName }}
            project_name: ${{ inputs.projectName }}
            project_display_name: ${{ inputs.projectDisplayName }}
            project_description: ${{ inputs.projectDescription }}
      
      # - uses: actions/upload-artifact@v4
      #   with:
      #     path: infra/terraform/variables.tf

      # - uses: hashicorp/setup-terraform@v3
          
      - run: terraform init
        name: Terraform init
        working-directory: infra/terraform

      - run: terraform plan
        name: Terraform plan
        working-directory: infra/terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve         
        working-directory: infra/terraform
