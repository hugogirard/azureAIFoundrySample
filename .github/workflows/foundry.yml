name: Create AI Foundry Resource

on:
  workflow_dispatch:
    inputs:
      lockdown:
        description: 'if resource should be locked down to private traffic only (true mean lockdown)'
        required: true
        default: false
        type: boolean

jobs:
  create-azure-resources:
    env:
      REGION: ${{ secrets.LOCATION }} # You can change this to reflect the region where you deploy your Accelerator
      AZURE_CORE_OUTPUT: "none"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: Azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Temp fix
      - name: bicep tmp fix
        run: az config set bicep.use_binary_from_path=false

      - uses: cschleiden/replace-tokens@v1
        name: Update bicepparam
        with:
            tokenPrefix: '__'
            tokenSuffix: '__'            
            files: '["infra/foundry/main.bicepparam"]'
        env:            
            location: ${{ secrets.LOCATION }}
            subnetAgentResourceId: ${{ secrets.SUBNET_AGENT_ID }}
            aiServiceDnsZoneName: ${{ secrets.AI_SERVICES_PRIVATE_DNS_ZONE_RESOURCE_NAME }}
            cognitiveServicesDnsZoneName: ${{ secrets.COGNITIVE_SERVICES_PRIVATE_DNS_ZONE_RESOURCE_NAME }}
            openAiDnsZoneName: ${{ secrets.OPEN_AI_PRIVATE_DNS_ZONE_RESOURCE_NAME }}
            privateDNSResourceGroupName: ${{ secrets.PRIVATE_DNS_RESOURCE_GROUP_NAME }}
            subnetPrivateEndpointResourceId: ${{ secrets.SUBNET_PRIVATE_ENDPOINT_ID }}

      - name: deploy
        id: createResources
        uses: azure/arm-deploy@v2
        with:
          resourceGroupName: ${{ secrets.RESOURCE_GROUP_NAME }}
          deploymentName: ${{ github.run_id }}
          template: ./infra/foundry/main.bicep
          failOnStdErr: false
          parameters: ./infra/foundry/main.bicepparam lockdown=${{inputs.lockdown}}

      - uses: gliech/create-github-secret-action@v1
        with:
          name: FOUNDRY_RESOURCE_NAME
          value: ${{ steps.createResources.outputs.foundryResourceName }}
          pa_token: ${{ secrets.PA_TOKEN }}          

